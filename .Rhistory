install.packages("KernSmooth")
library)
library()
library(KernSmooth)
library(slidify)
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555, z)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z) - 1
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
swirl()
library("swirl")
swirl()
x <- 1+2
x
library("swirl")
ls()
rm(list=ls())
ls)
ls()
swirl
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd("old.dir")
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1?
15:1
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length = 30)
lemgth(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Jennifer")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3,c("x","y","z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
print(my_data)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vecor <- 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
play()
nxt()
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
play()
?cbind
nxt()
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
play()
x <- 4
class(x)
x <- c(4,TRUE)
class(x)
y <- c(4,TRUE)
class(y)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
class(rbind(x, y))
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
length(x[[2]])
x <- 1:4
y <- 2
x+ y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
install.packages(swirl)
swirl
install.package(swirl)
install.packages("swirl")
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[x:10]
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
install.packages("swirl")
library(swirl)
Jennifer
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 , 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 != 7
5!=7
!(5 == 7)
install.packages("swirl")
library(swirl)
1
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints < 5
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
source('~/Coursera/reminder.R')
submit()
reminder(5)
remainder(5)
remainder(7,3)
source('~/Coursera/reminder.R')
submit()
evaluate(sum, c(2,4,6))
paste()
?paste
swirl()
nxt()
install.packages("swirl")
library(swirl)
ls
swirl()
Sys.Date()
mean(c(2,4,5))
submit
submit()
View(boring_function)
submit()
View(boring_function)
submit()
View(boring_function)
submit()
boring_function('My first function!')
boring_function
submit()
mean(c(4.2.10))
mean(c(4,2,10))
my_mean(c(4,2,10))
submit()
getwd()
install.packages("swirl")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x-1}, 6)
evaluate(function(x){x+1}, 6)
evaluate(x([1]), c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("good", "morning")
submit()
mad_libs(adjective = "jjen", place = "ppen", noun = "mmen")
submit()
'I' %p% 'love' %p% 'R!'
dl <- Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.Date())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
ls()
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
numeric()
?numeric
View(corr)
View(complete)
View(pollutantmean)
?corr
?cor
submit(complete())
submit
submit()
library()
getwd()
ls()
submit
install.packages("submit")
install.packages("submit")
?submit_cran
install.packages("submit_cran")
?complete.cases
complete.cases(specdata)
dir
dir()
getwd()
list.dirs
ls
ls()
View(pollutantmean)
View(corr)
View(complete)
nobs
complete(specdata)
View(complete)
complete <- function(directory, id = 1:332) {
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
df = complete(directory)
df = complete("specdata")
df
ids = df[df["nobs"] > threshold, ]$id
ids = df[df["nobs"] > 400, ]$id
ids
idss = df[df["nobs"] > 400, ]
idss
complete("specdata")
df = complete("specdata")
df["nobs"]
df["nobs", ]
df["nobs", ]$id
df["nobs"] > 400
df[df["nobs"] > 400]
df[df["nobs"] > 400, ]
df[df["nobs"] > 400, ]$id
df[df["nobs"] > 400, ]$nobs
DirDF = complete("specdata")
IDList = DirDF[DirDF["nobs"] > threshold, ]$id
IDList = DirDF[DirDF["nobs"] > 600, ]$id
cor_return = numeric()
FileRead = read.csv(paste("specdata", "/", formatC(133, width = 3, flag = "0"), ".csv", sep = ""))
FileRead
FileRead = read.csv(paste("specdata", "/", formatC(133, width = 3, flag = "0"), ".csv", sep = ""))
DDFfile = FileRead[complete.cases(FileRead), ]
DDFfile
cor_return = c(cor_return, cor(dff$sulfate, dff$nitrate))
cor_return = c(cor_return, cor(DDFfile$sulfate, DDFfile$nitrate))
cor_return
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
a <- array(rnorm(2*2*10), c(2,2,10))
a
str(mapply)
str(tapply)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f <- gl(3, 10)
f
z <- gl(2, 8, labels = c("Control","Treat"))
z
f <- gl(2,1,20)
f
f <- gl(2,2,20)
f
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
s <- split(airquality, airquality$Day)
s
s <- split(airquality, airquality$Temp)
s
s <- split(airquality, airquality$Month)
s
s <- split(airquality, airquality$Month, drop = TRUE)
s
s <- split(airquality, airquality$Month, drop = FALSE)
s
lapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone","Solar.R","Wind")], na.rm = TRUE))
mean(x)
traceback()
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
clc_list <- lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as character(cls_list)
as.character(cls_list)
?sapply
clc_list <- sapply(flags, class)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[ , 11:17]
flag_colors <- flags[ , 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[ , 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
setwd("C:/Users/Jennifer/ProgrammingAssignment2")
ls()
dir
ls
dir()
